{"version":3,"sources":["Context/TodoContextReducer.js","Context/TodoContext.js","reducers/todo/index.js","reducers/index.js","actions/todo/index.js","redux/index.js","GraphQL/initialState.js","GraphQL/resolvers/todoResolver.js","ApolloClient/index.js","components/AddTodo/index.js","components/TodoItem/index.js","components/TodoList/index.js","components/Context/index.js","components/Redux/index.js","components/Apollo/query.js","components/Apollo/index.js","App.js","serviceWorker.js","index.js"],"names":["state","action","type","newTodo","id","todos","length","todo","payload","complete","updatedTodos","map","filteredTodos","filter","TodoContext","createContext","TodoState","props","useReducer","TodoContextReducer","dispatch","Provider","value","addTodo","updateTodo","deleteTodo","children","initialState","rootReducer","todoState","RootState","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","GET_TODOS","gql","mutation","_","args","cache","data","readQuery","query","__typename","writeData","newTodos","client","ApolloClient","InMemoryCache","resolvers","Mutation","TodoResolver","AddTodo","useState","todoText","setTodoText","handleAdd","handleSubmit","e","preventDefault","onSubmit","Grid","container","spacing","item","xs","TextField","placeholder","onChange","target","fullWidth","Button","variant","color","disabled","onCLick","TodoItem","handleUpdate","handleDelete","listItemTextStyle","textDecoration","ListItem","button","onClick","ListItemText","primary","style","ListItemIcon","TodoList","List","key","Context","todoContext","useContext","theme","useTheme","Paper","padding","justify","icon","reactIcon","width","height","Typography","component","align","gutterBottom","Redux","useSelector","useDispatch","reduxIcon","ADD_TODO","UPDATE_TODO","DELETE_TODO","Apollo","useQuery","loading","useMutation","apollostackIcon","variables","App","className","Container","maxWidth","paddingTop","paddingBottom","sm","md","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e205c76a.chunk.js","sourcesContent":["export const ADD_TODO = \"ADD_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      const newTodo = {\r\n        id: state.todos.length,\r\n        todo: action.payload,\r\n        complete: false,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, newTodo],\r\n      };\r\n    case UPDATE_TODO:\r\n      const updatedTodos = state.todos.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          todo.complete = !todo.complete;\r\n        }\r\n\r\n        return todo;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        todos: updatedTodos,\r\n      };\r\n    case DELETE_TODO:\r\n      const filteredTodos = state.todos.filter(\r\n        (todo) => todo.id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        todos: filteredTodos,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport { createContext } from \"react\";\r\nimport TodoContextReducer, {\r\n  ADD_TODO,\r\n  UPDATE_TODO,\r\n  DELETE_TODO,\r\n} from \"./TodoContextReducer\";\r\n\r\nexport const TodoContext = createContext();\r\n\r\nconst TodoState = (props) => {\r\n  const initialState = {\r\n    todos: [],\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(TodoContextReducer, initialState);\r\n\r\n  const addTodo = (todo) => {\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      payload: todo,\r\n    });\r\n  };\r\n\r\n  const updateTodo = (todo) => {\r\n    dispatch({\r\n      type: UPDATE_TODO,\r\n      payload: todo,\r\n    });\r\n  };\r\n\r\n  const deleteTodo = (todo) => {\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      payload: todo,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TodoContext.Provider\r\n      value={{\r\n        todos: state.todos,\r\n        addTodo,\r\n        updateTodo,\r\n        deleteTodo,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TodoContext.Provider>\r\n  );\r\n};\r\n\r\nexport default TodoState;\r\n","import { ADD_TODO, UPDATE_TODO, DELETE_TODO } from \"../../actions/todo\";\r\n\r\nclass TodoState {\r\n  todos = [];\r\n}\r\n\r\nconst initialState = new TodoState();\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      const newTodo = {\r\n        id: state.todos.length,\r\n        todo: action.payload,\r\n        complete: false,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, newTodo],\r\n      };\r\n    case UPDATE_TODO:\r\n      const updatedTodos = state.todos.map((todo) => {\r\n        if (todo.id === action.payload) {\r\n          todo.complete = !todo.complete;\r\n        }\r\n\r\n        return todo;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        todos: updatedTodos,\r\n      };\r\n    case DELETE_TODO:\r\n      const filteredTodos = state.todos.filter(\r\n        (todo) => todo.id !== action.payload\r\n      );\r\n      return {\r\n        ...state,\r\n        todos: filteredTodos,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport todoState from \"./todo\";\r\n\r\nconst rootReducer = {\r\n  todoState,\r\n};\r\n\r\nconst RootState = combineReducers(rootReducer);\r\n\r\nexport default RootState;\r\n","export const ADD_TODO = \"ADD_TODO\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","const initialState = {\r\n  todos: []\r\n}\r\n\r\nexport default initialState;","import gql from \"graphql-tag\";\r\n\r\nconst GET_TODOS = gql`\r\n  query getTodos {\r\n    todos @client {\r\n      id\r\n      todo\r\n      complete\r\n    }\r\n  }\r\n`;\r\n\r\nconst mutation = {\r\n  addTodo: (_, args, { cache }) => {\r\n    const data = cache.readQuery({ query: GET_TODOS });\r\n\r\n    const newTodo = {\r\n      id: data.todos.length,\r\n      __typename: \"todoItem\",\r\n      todo: args.todo,\r\n      complete: false,\r\n    };\r\n\r\n    cache.writeData({ data: { todos: [...data.todos, newTodo] } });\r\n  },\r\n  updateTodo: (_, args, { cache }) => {\r\n    const data = cache.readQuery({ query: GET_TODOS });\r\n\r\n    const newTodos = data.todos.map((todo) => {\r\n      if (todo.id === args.id) {\r\n        todo.complete = !todo.complete;\r\n      }\r\n\r\n      return todo;\r\n    });\r\n\r\n    cache.writeData({ data: { todos: newTodos } });\r\n  },\r\n  deleteTodo: (_, args, { cache }) => {\r\n    const data = cache.readQuery({ query: GET_TODOS });\r\n\r\n    const newTodos = data.todos.filter((todo) => todo.id !== args.id);\r\n\r\n    cache.writeData({ data: { todos: newTodos } });\r\n  },\r\n};\r\n\r\nexport default mutation;\r\n","import ApolloClient, { InMemoryCache } from \"apollo-boost\";\r\nimport initialState from \"../GraphQL/initialState\";\r\nimport TodoResolver from \"../GraphQL/resolvers/todoResolver\";\r\n\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  resolvers: {\r\n    Mutation: {\r\n      ...TodoResolver,\r\n    },\r\n  },\r\n});\r\n\r\nclient.writeData({ data: { ...initialState } });\r\n\r\nexport default client;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material ui\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst AddTodo = (props) => {\r\n  // state\r\n  const [todoText, setTodoText] = useState(\"\");\r\n\r\n  // props\r\n  const { handleAdd } = props;\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (todoText === \"\") {\r\n      return;\r\n    }\r\n\r\n    handleAdd(todoText);\r\n\r\n    setTodoText(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            placeholder=\"to do...\"\r\n            value={todoText}\r\n            onChange={(e) => setTodoText(e.target.value)}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            disabled={todoText === \"\"}\r\n            fullWidth\r\n            onCLick={(e) => handleSubmit(e)}\r\n          >\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddTodo.propTypes = {\r\n  handleAdd: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\n// material ui\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nconst TodoItem = (props) => {\r\n  const { todo, handleUpdate, handleDelete } = props;\r\n\r\n  const listItemTextStyle = {\r\n    textDecoration: todo.complete ? \"line-through\" : \"none\",\r\n  };\r\n\r\n  return (\r\n    <ListItem button onClick={() => handleUpdate(todo.id)}>\r\n      <ListItemText primary={todo.todo} style={listItemTextStyle} />\r\n      <ListItemIcon onClick={() => handleDelete(todo.id)}>\r\n        <DeleteIcon />\r\n      </ListItemIcon>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\n\r\n// material ui\r\nimport List from \"@material-ui/core/List\";\r\n\r\n// components\r\nimport TodoItem from \"../TodoItem\";\r\n\r\nconst TodoList = (props) => {\r\n  const { todos, handleUpdate, handleDelete } = props;\r\n\r\n  return (\r\n    <List>\r\n      {todos.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          handleUpdate={handleUpdate}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useContext } from \"react\";\r\nimport { TodoContext } from \"../../Context/TodoContext\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport reactIcon from \"@iconify/icons-logos/react\";\r\n\r\n// material ui\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\n// components\r\nimport AddTodo from \"../AddTodo\";\r\nimport TodoList from \"../TodoList\";\r\n\r\nconst Context = () => {\r\n  const todoContext = useContext(TodoContext);\r\n  const { todos, addTodo, updateTodo, deleteTodo } = todoContext;\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleAdd = (todo) => {\r\n    addTodo(todo);\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    updateTodo(id);\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    deleteTodo(id);\r\n  };\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" style={{ padding: `${theme.spacing(2)}px` }}>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item>\r\n          <Icon icon={reactIcon} width=\"50\" height=\"50\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Typography component=\"h2\" variant=\"h5\" align=\"center\" gutterBottom>\r\n        React.Context\r\n        <AddTodo handleAdd={handleAdd} />\r\n        <TodoList\r\n          todos={todos}\r\n          handleUpdate={handleUpdate}\r\n          handleDelete={handleDelete}\r\n        />\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ADD_TODO, UPDATE_TODO, DELETE_TODO } from \"../../actions/todo\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport reduxIcon from \"@iconify/icons-logos/redux\";\r\n\r\n// material ui\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\n// components\r\nimport AddTodo from \"../AddTodo\";\r\nimport TodoList from \"../TodoList\";\r\n\r\nconst Redux = () => {\r\n  const todos = useSelector((state) => state.todoState.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleAdd = (todo) => {\r\n    dispatch({\r\n      type: ADD_TODO,\r\n      payload: todo,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    dispatch({\r\n      type: UPDATE_TODO,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    dispatch({\r\n      type: DELETE_TODO,\r\n      payload: id,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" style={{ padding: `${theme.spacing(2)}px` }}>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item>\r\n          <Icon icon={reduxIcon} width=\"50\" height=\"50\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Typography component=\"h2\" variant=\"h5\" align=\"center\" gutterBottom>\r\n        Redux\r\n        <AddTodo handleAdd={handleAdd} />\r\n        <TodoList\r\n          todos={todos}\r\n          handleUpdate={handleUpdate}\r\n          handleDelete={handleDelete}\r\n        />\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Redux;\r\n","import gql from \"graphql-tag\";\r\n\r\nexport const GET_TODOS = gql`\r\n  query getTodos {\r\n    todos @client {\r\n      id\r\n      todo\r\n      complete\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_TODO = gql`\r\n  mutation addTodo($todo: String!) {\r\n    addTodo(todo: $todo) @client\r\n  }\r\n`;\r\n\r\nexport const UPDATE_TODO = gql`\r\n  mutation updateTodo($id: ID!) {\r\n    updateTodo(id: $id) @client\r\n  }\r\n`;\r\n\r\nexport const DELETE_TODO = gql`\r\n  mutation deleteTodo($id: ID!) {\r\n    deleteTodo(id: $id) @client\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\r\nimport { GET_TODOS, ADD_TODO, UPDATE_TODO, DELETE_TODO } from \"./query\";\r\nimport { Icon } from \"@iconify/react\";\r\nimport apollostackIcon from \"@iconify/icons-logos/apollostack\";\r\n\r\n// material ui\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\n// components\r\nimport AddTodo from \"../AddTodo\";\r\nimport TodoList from \"../TodoList\";\r\n\r\nconst Apollo = () => {\r\n  const { data, loading } = useQuery(GET_TODOS);\r\n  const [addTodo] = useMutation(ADD_TODO);\r\n  const [updateTodo] = useMutation(UPDATE_TODO);\r\n  const [deleteTodo] = useMutation(DELETE_TODO);\r\n\r\n  const theme = useTheme();\r\n\r\n  const handleAdd = (todo) => {\r\n    addTodo({ variables: { todo } });\r\n  };\r\n\r\n  const handleUpdate = (id) => {\r\n    updateTodo({ variables: { id } });\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    deleteTodo({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Paper variant=\"outlined\" style={{ padding: `${theme.spacing(2)}px` }}>\r\n      <Grid container spacing={2} justify=\"center\">\r\n        <Grid item>\r\n          <Icon icon={apollostackIcon} width=\"50\" height=\"50\" />\r\n        </Grid>\r\n      </Grid>\r\n      <Typography component=\"h2\" variant=\"h5\" align=\"center\" gutterBottom>\r\n        Apollo Client\r\n        <AddTodo handleAdd={handleAdd} />\r\n        <TodoList\r\n          todos={data.todos}\r\n          handleUpdate={handleUpdate}\r\n          handleDelete={handleDelete}\r\n        />\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Apollo;\r\n","import React from \"react\";\r\nimport TodoContext from \"./Context/TodoContext\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\nimport client from \"./ApolloClient\";\r\n\r\n// material-ui\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\n// components\r\nimport Context from \"./components/Context\";\r\nimport Redux from \"./components/Redux\";\r\nimport Apollo from \"./components/Apollo\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Container\r\n        maxWidth=\"xl\"\r\n        style={{ paddingTop: \"24px\", paddingBottom: \"24px\" }}\r\n      >\r\n        <Typography component=\"h1\" variant=\"h3\" align=\"center\" gutterBottom>\r\n          Context vs Redux vs Apollo\r\n        </Typography>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <TodoContext>\r\n              <Context />\r\n            </TodoContext>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <Provider store={store}>\r\n              <Redux />\r\n            </Provider>\r\n          </Grid>\r\n          <Grid item xs={12} sm={12} md={4}>\r\n            <ApolloProvider client={client}>\r\n              <Apollo />\r\n            </ApolloProvider>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}